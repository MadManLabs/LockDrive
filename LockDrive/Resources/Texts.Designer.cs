//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LockDrive.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Texts {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Texts() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LockDrive.Resources.Texts", typeof(Texts).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applications are accessing this volume..
        /// </summary>
        internal static string ErrorAccessDenied {
            get {
                return ResourceManager.GetString("ErrorAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume does not have key protectors of the type &quot;Numerical Password&quot; or &quot;External Key&quot; that are necessary to unlock the volume..
        /// </summary>
        internal static string ErrorKeyRequired {
            get {
                return ResourceManager.GetString("ErrorKeyRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error: {0}.
        /// </summary>
        internal static string ErrorLineFormat {
            get {
                return ResourceManager.GetString("ErrorLineFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No drive found for {0}..
        /// </summary>
        internal static string ErrorNoMatchingDriveFormat {
            get {
                return ResourceManager.GetString("ErrorNoMatchingDriveFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid drive..
        /// </summary>
        internal static string ErrorNotDriveFormat {
            get {
                return ResourceManager.GetString("ErrorNotDriveFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume is fully decrypted and cannot be locked..
        /// </summary>
        internal static string ErrorNotEncrypted {
            get {
                return ResourceManager.GetString("ErrorNotEncrypted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not an unlocked BitLocker drive..
        /// </summary>
        internal static string ErrorNotUBLDrive {
            get {
                return ResourceManager.GetString("ErrorNotUBLDrive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The volume&apos;s encryption key is available in the clear on the disk, preventing the volume from being locked..
        /// </summary>
        internal static string ErrorProtectionDisabled {
            get {
                return ResourceManager.GetString("ErrorProtectionDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown code {0:X}..
        /// </summary>
        internal static string ErrorUnknownCodeFormat {
            get {
                return ResourceManager.GetString("ErrorUnknownCodeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press any key to exit....
        /// </summary>
        internal static string ExitLine {
            get {
                return ResourceManager.GetString("ExitLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ==================================================
        ///This utility locks an unlocked BitLocker drive.
        ///Pass the drive letter as the parameter or type it
        ///below to use it.
        ///==================================================.
        /// </summary>
        internal static string PromptBanner {
            get {
                return ResourceManager.GetString("PromptBanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the drive letter (or enter to exit): .
        /// </summary>
        internal static string PromptLine {
            get {
                return ResourceManager.GetString("PromptLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drive {0} locked successfully..
        /// </summary>
        internal static string SuccessLineFormat {
            get {
                return ResourceManager.GetString("SuccessLineFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Working....
        /// </summary>
        internal static string WorkingLine {
            get {
                return ResourceManager.GetString("WorkingLine", resourceCulture);
            }
        }
    }
}
